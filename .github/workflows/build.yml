name: macOS, Linux, Windows

# Controls when the action will run. Triggers the workflow on push events
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:

    # CI skip conditions
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    env:
      QWE: qwe
      QWE2: python -c "print('qwe2')"
      
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Build matrix for different platforms
    strategy:
      matrix:
        os: [ubuntu-latest]
        # Declare os-dependent env variables
        include:
        - os: ubuntu-latest
          POETRY_PATH: /home/runner/.poetry
          POETRY_VENV_PATH: /home/runner/.cache/pypoetry/virtualenvs
          QT_PATH: /home/runner/Qt

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Declare os-independent env variables
      shell: bash
      run: echo ::set-env name=SHORT_GITHUB_REF::${GITHUB_REF#refs/*/}

    #- name: Test python shell
    #  shell: python
    #  run: echo ::set-env name=SHORT_GITHUB_REF::${GITHUB_REF#refs/*/} python -c "print('qwe')"

    - name: Print variables
      run: |
        echo 'SHORT_GITHUB_REF:' $SHORT_GITHUB_REF
        echo 'env.SHORT_GITHUB_REF:' ${{ env.SHORT_GITHUB_REF }}
        echo 'RUNNER_OS:' $RUNNER_OS
        echo 'runner.os:' ${{ runner.os }}
        echo 'MATRIX_OS:' $MATRIX_OS
        echo 'matrix.os:' ${{ matrix.os }}
        echo 'matrix.POETRY_VENV_PATH:' ${{ matrix.POETRY_VENV_PATH }}
        echo 'matrix.QT_PATH:' ${{ matrix.QT_PATH }}
        echo 'env.QWE:' ${{ env.QWE }}
        echo 'QWE:' $QWE
        echo 'env.QWE2:' ${{ env.QWE2 }}
        echo 'QWE2:' $QWE2

    - name: Check-out the repository
      uses: actions/checkout@v2

    - name: Set up the Python environment
      uses: actions/setup-python@v2
      with:
          python-version: 3.7

    - name: Set up Poetry (Python packages manager)
      uses: Gr1N/setup-poetry@v2

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ${{ matrix.POETRY_PATH }}
          ${{ matrix.POETRY_VENV_PATH }}
          ${{ matrix.QT_PATH }}
          .Download
        key: ${{ matrix.os }}-poetry-${{ hashFiles('poetry.lock') }}


